{"ast":null,"code":"import _classCallCheck from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/riki/Documents/Git/AudioSynth/front/src/synth.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar Synthesizer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Synthesizer, _Component);\n\n  function Synthesizer(context, props) {\n    _classCallCheck(this, Synthesizer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Synthesizer).call(this, props));\n  }\n\n  _createClass(Synthesizer, [{\n    key: \"mute\",\n    value: function mute() {\n      //mutes the track\n      console.log('muted in the sound class');\n      this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n    }\n  }, {\n    key: \"unmute\",\n    value: function unmute() {\n      this.gainNode.gain.value = 1;\n    }\n  }, {\n    key: \"volumeAdjust\",\n    value: function volumeAdjust(val) {\n      this.gainNode.gain.value = val;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"polysynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"oscillatorGroup\", {\n        value: this.state.oscillator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"lfoGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"envelopeGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"filterGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Synthesizer;\n}(Component);\n\nvar OscillatorModule =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(OscillatorModule, _Component2);\n\n  /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n  */\n  function OscillatorModule(props) {\n    var _this;\n\n    _classCallCheck(this, OscillatorModule);\n\n    //context = audioContext from web audio api\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OscillatorModule).call(this, props));\n    _this.context = _this.props.context;\n    _this.gainNode1 = _this.context.createGain();\n    _this.gainNode2 = _this.context.createGain();\n    _this.gainNode3 = _this.context.createGain();\n    _this.merge = _this.context.createChannelMerger(3);\n    return _this;\n  }\n\n  _createClass(OscillatorModule, [{\n    key: \"setVolume\",\n    value: function setVolume(osc1, osc2, osc3) {\n      this.gainNode1.gain.value = osc1;\n      this.gainNode2.gain.value = osc2;\n      this.gainNode3.gain.value = osc3;\n    }\n  }, {\n    key: \"getlastNode\",\n    value: function getlastNode() {\n      return this.merge;\n    }\n  }, {\n    key: \"play\",\n    value: function play(value, time) {\n      this.refs.osc1Child.play(value, time);\n      this.refs.osc2Child.play(value, time);\n      this.refs.osc3Child.play(value, time);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {}\n  }, {\n    key: \"connectOutput\",\n    value: function connectOutput(node) {\n      node.connect(this.context.destination); // switch (id){\n      //     case \"osc1\":\n      //         node.connect(this.gainNode1);\n      //         break;\n      //     case \"osc2\":\n      //         node.connect(this.gainNode2);\n      //         break;\n      //     case \"osc3\":\n      //         node.connect(this.gainNode3);\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"oscModule\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Oscillator, {\n        id: \"osc1\",\n        ref: \"osc1Child\",\n        context: this.props.context,\n        connectOutput: this.connectOutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Oscillator, {\n        id: \"osc2\",\n        ref: \"osc2Child\",\n        context: this.props.context,\n        connectOutput: this.connectOutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Oscillator, {\n        id: \"osc3\",\n        ref: \"osc1Child\",\n        context: this.props.context,\n        connectOutput: this.connectOutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OscillatorModule;\n}(Component);\n\nvar LFOModule =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(LFOModule, _Component3);\n\n  function LFOModule(context) {\n    var _this2;\n\n    _classCallCheck(this, LFOModule);\n\n    return _possibleConstructorReturn(_this2);\n  }\n\n  return LFOModule;\n}(Component);\n\nvar envelopeGroup =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(envelopeGroup, _Component4);\n\n  function envelopeGroup(context) {\n    var _this3;\n\n    _classCallCheck(this, envelopeGroup);\n\n    return _possibleConstructorReturn(_this3);\n  }\n\n  return envelopeGroup;\n}(Component);\n\nvar Oscillator =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(Oscillator, _Component5);\n\n  //oscillator class encapsulates states associated to individual oscillator\n  //Requires audio node of where to connect oscillator to and contains functions\n  //to be called by the parent class OscillatorModule\n  function Oscillator(props) {\n    var _this4;\n\n    _classCallCheck(this, Oscillator);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Oscillator).call(this, props));\n    _this4.state = {\n      oscType: 'sine'\n    }; //creates the oscillator\n\n    _this4.osc = props.context.createOscillator(); //sets wave type to be sine wave\n\n    _this4.osc.type = _this4.state.oscType; //connects oscillator to node passed by parent\n    //this.props.connectOutput(this.osc, this.props.id);\n    //this.osc.start(props.context.currentTime);\n\n    return _this4;\n  }\n\n  _createClass(Oscillator, [{\n    key: \"init\",\n    value: function init() {\n      this.osc = this.props.context.createOscillator();\n      this.osc.type = this.state.oscType;\n      this.osc.connect(this.props.nextNode);\n    }\n  }, {\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.setState({\n        oscType: wave\n      });\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getOscillator\",\n    value: function getOscillator() {\n      //returns the oscillator object to be used to connected in an audio chain.\n      return this.osc;\n    }\n  }, {\n    key: \"changeNote\",\n    value: function changeNote(value) {\n      this.osc.frequency.value = value; //this.gainNode.gain.setValueAtTime(1, this.props.context.currentTime);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {\n      //stops the oscillator when needed\n      this.osc.stop(time + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"oscillator\",\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Wave-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'sine'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Sine\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'square'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Square\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'sawtooth'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Saw\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'triangle'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Triangle\")), this.state.oscType, React.createElement(\"div\", {\n        className: \"Pitch-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pitchKnob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Oscillator;\n}(Component);\n\nvar envelope =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(envelope, _Component6);\n\n  //Attack: time of gain rise - linear rate?\n  //Sustain: time extension of the play trigger\n  //Decay: time of gain decrease\n  //Release: time of signal length from starting point\n  function envelope(props) {\n    var _this5;\n\n    _classCallCheck(this, envelope);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(envelope).call(this, props));\n    _this5.state = {\n      attack: 0,\n      decay: 0,\n      sustain: 1,\n      rlse: 0\n    };\n    return _this5;\n  }\n\n  return envelope;\n}(Component);\n\nvar lfo =\n/*#__PURE__*/\nfunction () {\n  //Frequency of low frequency oscillator\n  function lfo(context) {\n    _classCallCheck(this, lfo);\n\n    this.osc = context.createOscillator();\n  }\n\n  _createClass(lfo, [{\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getWave\",\n    value: function getWave() {\n      //gets the current wave type of the oscillator\n      return this.osc.type;\n    }\n  }, {\n    key: \"setFreq\",\n    value: function setFreq(freq) {\n      this.osc.frequency.value = freq;\n    }\n  }, {\n    key: \"getFreq\",\n    value: function getFreq() {\n      return this.osc.frequnect.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return lfo;\n}();\n\nvar filter = function filter() {\n  _classCallCheck(this, filter);\n};\n\nexport default OscillatorModule; // export default synth;","map":{"version":3,"sources":["/Users/riki/Documents/Git/AudioSynth/front/src/synth.js"],"names":["React","Component","Synthesizer","context","props","console","log","gainNode","gain","setValueAtTime","currentTime","value","val","state","oscillator","OscillatorModule","gainNode1","createGain","gainNode2","gainNode3","merge","createChannelMerger","osc1","osc2","osc3","time","refs","osc1Child","play","osc2Child","osc3Child","node","connect","destination","connectOutput","LFOModule","envelopeGroup","Oscillator","oscType","osc","createOscillator","type","nextNode","wave","setState","frequency","stop","id","setWave","bind","envelope","attack","decay","sustain","rlse","lfo","freq","frequnect","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nclass Synthesizer extends Component{\n    constructor(context, props){\n        super(props);\n\n    }\n\n    mute() {//mutes the track\n        console.log('muted in the sound class');\n        this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n\n    }\n\n\n\n    unmute() {\n        this.gainNode.gain.value = 1;\n    }\n    volumeAdjust(val) {\n        this.gainNode.gain.value = val;\n    }\n    handle\n    render() {\n        return (\n            <div className=\"polysynth\">\n                <oscillatorGroup\n                    value={this.state.oscillator}\n\n                />\n\n                <lfoGroup\n                \n                />\n                <envelopeGroup\n                \n                />\n                <filterGroup\n                \n                />\n            </div>\n\n\n        );\n    }\n}\n\nclass OscillatorModule extends Component{\n    /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n    */\n    constructor(props){\n         //context = audioContext from web audio api\n        super(props);\n        this.context = this.props.context;\n        this.gainNode1 = this.context.createGain();\n        this.gainNode2 = this.context.createGain();\n        this.gainNode3 = this.context.createGain();\n        this.merge = this.context.createChannelMerger(3);\n    }\n\n    setVolume(osc1, osc2, osc3){\n        this.gainNode1.gain.value = osc1;\n        this.gainNode2.gain.value = osc2;\n        this.gainNode3.gain.value = osc3;\n    }\n\n    getlastNode(){\n        return this.merge;\n    }\n\n    play(value, time){\n        this.refs.osc1Child.play(value, time);\n        this.refs.osc2Child.play(value, time);\n        this.refs.osc3Child.play(value, time);\n    }\n\n    stop(time){\n        \n    }\n\n    connectOutput(node){\n        node.connect(this.context.destination);\n        // switch (id){\n        //     case \"osc1\":\n        //         node.connect(this.gainNode1);\n        //         break;\n        //     case \"osc2\":\n        //         node.connect(this.gainNode2);\n        //         break;\n        //     case \"osc3\":\n        //         node.connect(this.gainNode3);\n        // }\n    }\n\n    render(){\n        return(\n            <div className=\"oscModule\">\n                <Oscillator \n                    id={\"osc1\"}\n                    ref=\"osc1Child\"\n                    context={this.props.context}\n                    connectOutput={this.connectOutput}\n                />\n\n                <Oscillator \n                    id={\"osc2\"}\n                    ref=\"osc2Child\"\n                    context={this.props.context}\n                    connectOutput={this.connectOutput}\n                />\n\n                <Oscillator \n                    id={\"osc3\"}\n                    ref=\"osc1Child\"\n                    context={this.props.context}\n                    connectOutput={this.connectOutput}\n                />\n            </div>\n        );\n    }\n}\n\nclass LFOModule extends Component{\n    constructor(context){\n\n    }\n\n}\n\nclass envelopeGroup extends Component{\n    constructor(context){\n        \n    }\n}\n\nclass Oscillator extends Component{\n    //oscillator class encapsulates states associated to individual oscillator\n    //Requires audio node of where to connect oscillator to and contains functions\n    //to be called by the parent class OscillatorModule\n    constructor(props){\n        super(props)\n        this.state = {\n            oscType : 'sine',\n        };\n        //creates the oscillator\n        this.osc = props.context.createOscillator();\n        //sets wave type to be sine wave\n        this.osc.type = this.state.oscType;\n        //connects oscillator to node passed by parent\n        //this.props.connectOutput(this.osc, this.props.id);\n        //this.osc.start(props.context.currentTime);\n    }\n    init(){\n        this.osc = this.props.context.createOscillator();\n        this.osc.type = this.state.oscType;\n        this.osc.connect(this.props.nextNode);\n    }\n\n    setWave(wave){ \n        //sets the wave type of the oscillator\n        this.setState({oscType: wave});\n        this.osc.type = wave;\n    }\n\n    getOscillator(){\n    //returns the oscillator object to be used to connected in an audio chain.\n        return this.osc;\n    }\n\n    changeNote(value){ \n        this.osc.frequency.value = value;\n        //this.gainNode.gain.setValueAtTime(1, this.props.context.currentTime);\n    }\n\n    stop(time) {\n        //stops the oscillator when needed\n        this.osc.stop(time + 1);\n    }\n\n    render(){\n        return(\n            <div className=\"oscillator\" id = {this.props.id}>\n                <div className=\"Wave-form\">\n                    <button onClick={this.setWave.bind(this, 'sine')}>Sine</button>\n                    <button onClick={this.setWave.bind(this, 'square')}>Square</button>\n                    <button onClick={this.setWave.bind(this, 'sawtooth')}>Saw</button>\n                    <button onClick={this.setWave.bind(this, 'triangle')}>Triangle</button>\n                </div>\n                {this.state.oscType}\n                <div className=\"Pitch-control\">\n                    <div className=\"pitchKnob\"></div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass envelope extends Component{\n    //Attack: time of gain rise - linear rate?\n    //Sustain: time extension of the play trigger\n    //Decay: time of gain decrease\n    //Release: time of signal length from starting point\n    constructor(props){\n        super(props);\n        this.state = {\n            attack: 0,\n            decay: 0,\n            sustain: 1,\n            rlse: 0,\n        };\n    }\n}\n\nclass lfo{\n    //Frequency of low frequency oscillator\n    constructor(context){\n        this.osc = context.createOscillator();\n    }\n    setWave(wave){ \n    //sets the wave type of the oscillator\n        this.osc.type = wave;\n    }\n    getWave(){ \n    //gets the current wave type of the oscillator\n        return this.osc.type;\n    }\n    setFreq(freq){\n        this.osc.frequency.value = freq;\n    }\n    getFreq(){\n        return this.osc.frequnect.value;\n    }\n    render(){\n        return(\n        <div id={this.props.id}>\n            \n        </div>\n        )\n    }\n}\n\nclass filter{\n    \n}\n\n\nexport default OscillatorModule;\n// export default synth;\n\n"]},"metadata":{},"sourceType":"module"}