{"ast":null,"code":"import _createClass from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/riki/Documents/Git/AudioSynth/front/src/synth.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar synthesizer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(synthesizer, _Component);\n\n  function synthesizer() {\n    var _this;\n\n    _classCallCheck(this, synthesizer);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  return synthesizer;\n}(Component);\n\nvar synth =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(synth, _Component2);\n\n  function synth(context, props) {\n    _classCallCheck(this, synth);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(synth).call(this, props));\n  }\n\n  _createClass(synth, [{\n    key: \"mute\",\n    value: function mute() {\n      //mutes the track\n      console.log('muted in the sound class');\n      this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n    }\n  }, {\n    key: \"unmute\",\n    value: function unmute() {\n      this.gainNode.gain.value = 1;\n    }\n  }, {\n    key: \"volumeAdjust\",\n    value: function volumeAdjust(val) {\n      this.gainNode.gain.value = val;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"polysynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"oscillatorGroup\", {\n        value: this.state.oscillator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"lfoGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"envelopeGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"filterGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return synth;\n}(Component);\n\nvar OscillatorModule =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(OscillatorModule, _Component3);\n\n  /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n  */\n  function OscillatorModule(props) {\n    var _this2;\n\n    _classCallCheck(this, OscillatorModule);\n\n    //context = audioContext from web audio api\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(OscillatorModule).call(this, props));\n    _this2.context = _this2.props.context;\n    _this2.merge = _this2.context.createChannelMerger(3);\n    return _this2;\n  }\n\n  _createClass(OscillatorModule, [{\n    key: \"getlastNode\",\n    value: function getlastNode() {\n      return this.merge;\n    }\n  }, {\n    key: \"play\",\n    value: function play(value, time) {\n      this.refs.osc1Child.play(value, time);\n      this.refs.osc2Child.play(value, time);\n      this.refs.osc3Child.play(value, time);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"oscModule\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Oscillator, {\n        id: \"osc1\",\n        ref: \"osc1Child\",\n        nextNode: this.merge,\n        context: this.props.context,\n        connectOutput: this.connectOutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Oscillator, {\n        id: \"osc2\",\n        ref: \"osc2Child\",\n        context: this.props.context,\n        connectOutput: this.connectOutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Oscillator, {\n        id: \"osc3\",\n        ref: \"osc1Child\",\n        onPress: this.play,\n        onRelease: this.stop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OscillatorModule;\n}(Component);\n\nvar LFOModule =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(LFOModule, _Component4);\n\n  function LFOModule(context) {\n    var _this3;\n\n    _classCallCheck(this, LFOModule);\n\n    return _possibleConstructorReturn(_this3);\n  }\n\n  return LFOModule;\n}(Component);\n\nvar envelopeGroup =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(envelopeGroup, _Component5);\n\n  function envelopeGroup(context) {\n    var _this4;\n\n    _classCallCheck(this, envelopeGroup);\n\n    return _possibleConstructorReturn(_this4);\n  }\n\n  return envelopeGroup;\n}(Component);\n\nvar Oscillator =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(Oscillator, _Component6);\n\n  //oscillator class encapsulates states associated to individual oscillator\n  //Requires audio node of where to connect oscillator to and contains functions\n  //to be called by the parent class OscillatorModule\n  function Oscillator(props) {\n    var _this5;\n\n    _classCallCheck(this, Oscillator);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(Oscillator).call(this, props));\n    _this5.state = {\n      oscType: 'sine'\n    }; //creates the oscillator\n\n    _this5.osc = props.context.createOscillator(); //sets wave type to be sine wave\n\n    _this5.osc.type = _this5.state.oscType; //connects oscillator to node passed by parent\n\n    _this5.props.connectOutput(_this5.osc); //this.osc.start(props.context.currentTime);\n\n\n    return _this5;\n  }\n\n  _createClass(Oscillator, [{\n    key: \"init\",\n    value: function init() {\n      this.osc = this.props.context.createOscillator();\n      this.osc.type = this.state.oscType;\n      this.osc.connect(this.props.nextNode);\n    }\n  }, {\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.setState({\n        oscType: wave\n      });\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getOscillator\",\n    value: function getOscillator() {\n      //returns the oscillator object to be used to connected in an audio chain.\n      return this.osc;\n    }\n  }, {\n    key: \"changeNote\",\n    value: function changeNote(value) {\n      this.osc.frequency.value = value; //this.gainNode.gain.setValueAtTime(1, this.props.context.currentTime);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {\n      //stops the oscillator when needed\n      this.osc.stop(time + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Wave-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'sine'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Sine\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'square'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Square\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'sawtooth'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Saw\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'triangle'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Triangle\")), this.state.oscType, React.createElement(\"div\", {\n        className: \"Pitch-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pitchKnob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Oscillator;\n}(Component);\n\nvar envelope =\n/*#__PURE__*/\nfunction (_Component7) {\n  _inherits(envelope, _Component7);\n\n  //Attack: time of gain rise - linear rate?\n  //Sustain: time extension of the play trigger\n  //Decay: time of gain decrease\n  //Release: time of signal length from starting point\n  function envelope(props) {\n    var _this6;\n\n    _classCallCheck(this, envelope);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(envelope).call(this, props));\n    _this6.state = {\n      attack: 0,\n      decay: 0,\n      sustain: 1,\n      rlse: 0\n    };\n    return _this6;\n  }\n\n  return envelope;\n}(Component);\n\nvar lfo =\n/*#__PURE__*/\nfunction () {\n  //Frequency of low frequency oscillator\n  function lfo(context) {\n    _classCallCheck(this, lfo);\n\n    this.osc = context.createOscillator();\n  }\n\n  _createClass(lfo, [{\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getWave\",\n    value: function getWave() {\n      //gets the current wave type of the oscillator\n      return this.osc.type;\n    }\n  }, {\n    key: \"setFreq\",\n    value: function setFreq(freq) {\n      this.osc.frequency.value = freq;\n    }\n  }, {\n    key: \"getFreq\",\n    value: function getFreq() {\n      return this.osc.frequnect.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return lfo;\n}();\n\nvar filter = function filter() {\n  _classCallCheck(this, filter);\n};\n\nexport default Oscillator; // export default oscillatorGroup;\n// export default synth;","map":{"version":3,"sources":["/Users/riki/Documents/Git/AudioSynth/front/src/synth.js"],"names":["React","Component","synthesizer","synth","context","props","console","log","gainNode","gain","setValueAtTime","currentTime","value","val","state","oscillator","OscillatorModule","merge","createChannelMerger","time","refs","osc1Child","play","osc2Child","osc3Child","connectOutput","stop","LFOModule","envelopeGroup","Oscillator","oscType","osc","createOscillator","type","connect","nextNode","wave","setState","frequency","id","setWave","bind","envelope","attack","decay","sustain","rlse","lfo","freq","frequnect","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass synthesizer extends Component{\n    constructor(){\n\n    }\n}\n\n\nclass synth extends Component{\n    constructor(context, props){\n        super(props);\n\n    }\n\n    mute() {//mutes the track\n        console.log('muted in the sound class');\n        this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n\n    }\n\n\n\n    unmute() {\n        this.gainNode.gain.value = 1;\n    }\n    volumeAdjust(val) {\n        this.gainNode.gain.value = val;\n    }\n    handle\n    render() {\n        return (\n            <div className=\"polysynth\">\n                <oscillatorGroup\n                    value={this.state.oscillator}\n\n                />\n\n                <lfoGroup\n                \n                />\n                <envelopeGroup\n                \n                />\n                <filterGroup\n                \n                />\n            </div>\n\n\n        );\n    }\n}\n\n\n\n\n\n\nclass OscillatorModule extends Component{\n    /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n    */\n    constructor(props){\n         //context = audioContext from web audio api\n        super(props);\n        this.context = this.props.context;\n        this.merge = this.context.createChannelMerger(3);\n    }\n\n\n\n\n    getlastNode(){\n        return this.merge;\n    }\n\n    play(value, time){\n        this.refs.osc1Child.play(value, time);\n        this.refs.osc2Child.play(value, time);\n        this.refs.osc3Child.play(value, time);\n    }\n\n    stop(time){\n        \n    }\n\n    render(){\n        return(\n            <div className=\"oscModule\">\n                <Oscillator \n                    id={\"osc1\"}\n                    ref=\"osc1Child\"\n                    nextNode={this.merge}\n                    context={this.props.context}\n                    connectOutput={this.connectOutput}\n                />\n\n                <Oscillator \n                    id={\"osc2\"}\n                    ref=\"osc2Child\"\n                    context={this.props.context}\n                    connectOutput={this.connectOutput}\n\n                />\n\n                <Oscillator \n                    id={\"osc3\"}\n                    ref=\"osc1Child\"\n                    onPress={this.play}\n                    onRelease={this.stop}\n                />\n            </div>\n        );\n    }\n}\n\nclass LFOModule extends Component{\n    constructor(context){\n\n    }\n\n}\n\nclass envelopeGroup extends Component{\n    constructor(context){\n        \n    }\n}\n\nclass Oscillator extends Component{\n    //oscillator class encapsulates states associated to individual oscillator\n    //Requires audio node of where to connect oscillator to and contains functions\n    //to be called by the parent class OscillatorModule\n    constructor(props){\n        super(props)\n        this.state = {\n            oscType : 'sine',\n        };\n        //creates the oscillator\n        this.osc = props.context.createOscillator();\n        //sets wave type to be sine wave\n        this.osc.type = this.state.oscType;\n        //connects oscillator to node passed by parent\n        this.props.connectOutput(this.osc);\n        //this.osc.start(props.context.currentTime);\n    }\n    init(){\n        this.osc = this.props.context.createOscillator();\n        this.osc.type = this.state.oscType;\n        this.osc.connect(this.props.nextNode);\n    }\n\n    setWave(wave){ \n        //sets the wave type of the oscillator\n        this.setState({oscType: wave});\n        this.osc.type = wave;\n    }\n\n    getOscillator(){\n    //returns the oscillator object to be used to connected in an audio chain.\n        return this.osc;\n    }\n\n    changeNote(value){ \n        this.osc.frequency.value = value;\n        //this.gainNode.gain.setValueAtTime(1, this.props.context.currentTime);\n    }\n\n    stop(time) {\n        //stops the oscillator when needed\n        this.osc.stop(time + 1);\n    }\n\n    render(){\n        return(\n            <div id = {this.props.id}>\n                <div className=\"Wave-form\">\n                    <button onClick={this.setWave.bind(this, 'sine')}>Sine</button>\n                    <button onClick={this.setWave.bind(this, 'square')}>Square</button>\n                    <button onClick={this.setWave.bind(this, 'sawtooth')}>Saw</button>\n                    <button onClick={this.setWave.bind(this, 'triangle')}>Triangle</button>\n                </div>\n                {this.state.oscType}\n                <div className=\"Pitch-control\">\n                    <div className=\"pitchKnob\"></div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass envelope extends Component{\n    //Attack: time of gain rise - linear rate?\n    //Sustain: time extension of the play trigger\n    //Decay: time of gain decrease\n    //Release: time of signal length from starting point\n    constructor(props){\n        super(props);\n        this.state = {\n            attack: 0,\n            decay: 0,\n            sustain: 1,\n            rlse: 0,\n        };\n    }\n}\n\nclass lfo{\n    //Frequency of low frequency oscillator\n    constructor(context){\n        this.osc = context.createOscillator();\n    }\n    setWave(wave){ \n    //sets the wave type of the oscillator\n        this.osc.type = wave;\n    }\n    getWave(){ \n    //gets the current wave type of the oscillator\n        return this.osc.type;\n    }\n    setFreq(freq){\n        this.osc.frequency.value = freq;\n    }\n    getFreq(){\n        return this.osc.frequnect.value;\n    }\n    render(){\n        return(\n        <div id={this.props.id}>\n            \n        </div>\n        )\n    }\n}\n\nclass filter{\n    \n}\n\n\nexport default Oscillator;\n// export default oscillatorGroup;\n// export default synth;\n\n"]},"metadata":{},"sourceType":"module"}