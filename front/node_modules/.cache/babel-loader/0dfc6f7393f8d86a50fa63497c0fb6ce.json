{"ast":null,"code":"import _getPrototypeOf from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/riki/Documents/Git/AudioSynth/front/src/synth.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar synthesizer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(synthesizer, _Component);\n\n  function synthesizer() {\n    var _this;\n\n    _classCallCheck(this, synthesizer);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  return synthesizer;\n}(Component);\n\nvar synth =\n/*#__PURE__*/\nfunction () {\n  function synth(context) {\n    _classCallCheck(this, synth);\n  }\n\n  _createClass(synth, [{\n    key: \"mute\",\n    value: function mute() {\n      //mutes the track\n      console.log('muted in the sound class');\n      this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n    }\n  }, {\n    key: \"unmute\",\n    value: function unmute() {\n      this.gainNode.gain.value = 1;\n    }\n  }, {\n    key: \"volumeAdjust\",\n    value: function volumeAdjust(val) {\n      this.gainNode.gain.value = val;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"oscillator-module\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"oscillatorGroup\", {\n        value: this.state.oscillator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return synth;\n}();\n\nvar oscillatorGroup =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(oscillatorGroup, _Component2);\n\n  /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n  */\n  function oscillatorGroup(context) {\n    var _this2;\n\n    _classCallCheck(this, oscillatorGroup);\n\n    //context = audioContext from web audio api\n    _this2.context = context;\n    _this2.osc1 = new oscillator(context);\n    _this2.osc2 = new oscillator(context);\n    _this2.osc3 = new oscillator(context);\n    _this2.gainNode = _this2.context.createGain();\n    _this2.merge = _this2.context.createChannelMerger(3);\n\n    _this2.osc1.getOscGainNode().connect(_this2.merge, 1, 0);\n\n    _this2.osc2.connect(_this2.merge, 1, 1);\n\n    _this2.osc3.connect(_this2.merge, 1, 2);\n\n    _this2.merge.connect(_this2.gainNode);\n\n    return _possibleConstructorReturn(_this2);\n  }\n\n  _createClass(oscillatorGroup, [{\n    key: \"setWave\",\n    value: function setWave(wave, osc) {\n      switch (osc) {\n        case \"osc1\":\n          this.osc1.setWave(wave);\n          break;\n\n        case \"osc2\":\n          this.osc2.setWave(wave);\n          break;\n\n        case \"osc3\":\n          this.osc3.setWave(wave);\n          break;\n      }\n    }\n  }, {\n    key: \"setGain\",\n    value: function setGain(osc1Vol, osc2Vol, osc3Vol) {\n      //Should be a percentage, where function maps \n      this.osc1.setVolume(osc1Vol);\n      this.osc2.setVolume(osc2Vol);\n      this.osc3.setVolume(osc3Vol);\n    }\n  }, {\n    key: \"getlastNode\",\n    value: function getlastNode() {\n      return this.merge;\n    }\n  }, {\n    key: \"play\",\n    value: function play(value, time) {\n      this.osc1.play(value, time);\n      this.osc2.play(value, time);\n      this.osc3.play(value, time);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {\n      this.gainNode.gain.exponentialRampToValueAtTime(0.001, time + 1);\n      this.osc.stop(time + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"oscGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"oscillator\", {\n        id: \"osc1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"oscillator\", {\n        id: \"osc2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"oscillator\", {\n        id: \"osc3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return oscillatorGroup;\n}(Component);\n\nvar lfoGroup =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(lfoGroup, _Component3);\n\n  function lfoGroup(context) {\n    var _this3;\n\n    _classCallCheck(this, lfoGroup);\n\n    return _possibleConstructorReturn(_this3);\n  }\n\n  return lfoGroup;\n}(Component);\n\nvar envelopeGroup =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(envelopeGroup, _Component4);\n\n  function envelopeGroup(context) {\n    var _this4;\n\n    _classCallCheck(this, envelopeGroup);\n\n    return _possibleConstructorReturn(_this4);\n  }\n\n  return envelopeGroup;\n}(Component);\n\nvar oscillator =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(oscillator, _Component5);\n\n  //oscillator class providing an interface for control used by synth.\n  function oscillator(context, props) {\n    var _this5;\n\n    _classCallCheck(this, oscillator);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(oscillator).call(this, props)); //context = audioContext created using the Web Audio API.\n\n    _this5.context = context;\n    _this5.state = {};\n    return _this5;\n  }\n\n  _createClass(oscillator, [{\n    key: \"init\",\n    value: function init() {\n      this.osc = this.context.createOscillator();\n      this.gainNode = this.context.createGain();\n      this.osc.type = 'sine'; //connects oscillator to gain node\n\n      this.osc.connect(this.gainNode); //connects gain node to the output destination. Temporary until further implementation.\n\n      this.gainNode.connect(this.context.destination); // This binding is necessary to make `this` work in the callback\n\n      this.setWave = this.setWave.bind(this);\n      this.getWave = this.getWave.bind(this);\n      this.setWave = this.setWave.bind(this);\n      this.setVolume = this.setVolume.bind(this);\n    }\n  }, {\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getOscGainNode\",\n    value: function getOscGainNode() {\n      //returns the oscillator object to be used to connected in an audio chain.\n      return this.gainNode;\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(val) {\n      this.gainNode.gain.value = val;\n    }\n  }, {\n    key: \"play\",\n    value: function play(value, time) {\n      //value = pitch of note, time = \n      this.init();\n      this.osc.frequency.value = value;\n      this.gainNode.gain.setValueAtTime(1, this.context.currentTime);\n      this.osc.start(time);\n      this.stop(time);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {\n      this.gainNode.gain.exponentialRampToValueAtTime(0.001, time + 1);\n      this.osc.stop(time + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Power\"), React.createElement(\"div\", {\n        className: \"Wave-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onclick: this.setWave.bind(this, 'sine'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Sine\"), React.createElement(\"button\", {\n        onclick: this.setWave.bind(this, 'square'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Square\"), React.createElement(\"button\", {\n        onclick: this.setWave.bind(this, 'saw'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Saw\"), React.createElement(\"button\", {\n        onclick: this.setWave.bind(this, 'triangle'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Triangle\")), React.createElement(\"div\", {\n        className: \"Pitch-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pitchKnob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return oscillator;\n}(Component);\n\nvar envelope = function envelope() {\n  _classCallCheck(this, envelope);\n};\n\nvar lfo =\n/*#__PURE__*/\nfunction () {\n  //Frequency of low frequency oscillator\n  function lfo(context) {\n    _classCallCheck(this, lfo);\n\n    this.osc = context.createOscillator();\n    this.analyser = this.context.createAnalyser();\n    this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n  }\n\n  _createClass(lfo, [{\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getWave\",\n    value: function getWave() {\n      //gets the current wave type of the oscillator\n      return this.osc.type;\n    }\n  }, {\n    key: \"setFreq\",\n    value: function setFreq(freq) {\n      this.osc.frequency.value = freq;\n    }\n  }, {\n    key: \"getFreq\",\n    value: function getFreq() {\n      return this.osc.frequnect.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return lfo;\n}();\n\nvar filter = function filter() {\n  _classCallCheck(this, filter);\n};\n\nexport default oscillator; // export default oscillatorGroup;\n// export default synth;","map":{"version":3,"sources":["/Users/riki/Documents/Git/AudioSynth/front/src/synth.js"],"names":["React","Component","synthesizer","synth","context","console","log","gainNode","gain","setValueAtTime","currentTime","value","val","state","oscillator","oscillatorGroup","osc1","osc2","osc3","createGain","merge","createChannelMerger","getOscGainNode","connect","wave","osc","setWave","osc1Vol","osc2Vol","osc3Vol","setVolume","time","play","exponentialRampToValueAtTime","stop","lfoGroup","envelopeGroup","props","createOscillator","type","destination","bind","getWave","init","frequency","start","id","envelope","lfo","analyser","createAnalyser","dataArray","Uint8Array","frequencyBinCount","freq","frequnect","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass synthesizer extends Component{\n    constructor(){\n\n    }\n}\n\n\nclass synth{\n    constructor(context){\n    \n\n    }\n\n    mute() {//mutes the track\n        console.log('muted in the sound class');\n        this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n\n    }\n\n\n\n    unmute() {\n        this.gainNode.gain.value = 1;\n    }\n    volumeAdjust(val) {\n        this.gainNode.gain.value = val;\n    }\n    handle\n    render() {\n        return (\n            <div className = \"oscillator-module\">\n                <oscillatorGroup\n                    value={this.state.oscillator}\n\n                />\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\nclass oscillatorGroup extends Component{\n    /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n    */\n    constructor(context){ //context = audioContext from web audio api\n        this.context = context;\n        this.osc1 = new oscillator(context);\n        this.osc2 = new oscillator(context);\n        this.osc3 = new oscillator(context);\n        this.gainNode = this.context.createGain();\n        this.merge = this.context.createChannelMerger(3);\n        this.osc1.getOscGainNode().connect(this.merge,1,0);\n        this.osc2.connect(this.merge,1,1);\n        this.osc3.connect(this.merge,1,2);\n        this.merge.connect(this.gainNode);\n\n\n    }\n    setWave(wave,osc){\n        switch (osc){\n            case \"osc1\":\n            this.osc1.setWave(wave);\n            break;\n            case \"osc2\":\n            this.osc2.setWave(wave);\n            break;\n            case \"osc3\":\n            this.osc3.setWave(wave);\n            break;\n        }\n    }\n    setGain(osc1Vol, osc2Vol, osc3Vol){\n        //Should be a percentage, where function maps \n        this.osc1.setVolume(osc1Vol);\n        this.osc2.setVolume(osc2Vol);\n        this.osc3.setVolume(osc3Vol);\n    }\n\n    getlastNode(){\n        return this.merge;\n    }\n    play(value, time){\n        this.osc1.play(value, time);\n        this.osc2.play(value, time);\n        this.osc3.play(value, time);\n    }\n    stop(time){\n        this.gainNode.gain.exponentialRampToValueAtTime(0.001, time + 1);\n        this.osc.stop(time + 1);\n    }\n\n    render(){\n        return(\n        <div className=\"oscGroup\">\n            <oscillator \n                id={\"osc1\"}/>\n            <oscillator id={\"osc2\"}/>\n            <oscillator id={\"osc3\"}/>\n        </div>\n        );\n    }\n}\n\nclass lfoGroup extends Component{\n    constructor(context){\n\n    }\n\n}\n\nclass envelopeGroup extends Component{\n    constructor(context){\n        \n    }\n}\n\nclass oscillator extends Component{\n    //oscillator class providing an interface for control used by synth.\n    constructor(context, props){\n        super(props)\n        //context = audioContext created using the Web Audio API.\n        this.context = context;\n        this.state = {\n\n        }\n    }\n    init(){\n        this.osc = this.context.createOscillator();\n        this.gainNode = this.context.createGain();\n        this.osc.type = 'sine';\n        //connects oscillator to gain node\n        this.osc.connect(this.gainNode);\n        //connects gain node to the output destination. Temporary until further implementation.\n        this.gainNode.connect(this.context.destination);\n        // This binding is necessary to make `this` work in the callback\n        this.setWave = this.setWave.bind(this);\n        this.getWave = this.getWave.bind(this);\n        this.setWave = this.setWave.bind(this);\n        this.setVolume = this.setVolume.bind(this);\n\n    }\n\n    setWave(wave){ \n    //sets the wave type of the oscillator\n        this.osc.type = wave;\n    }\n\n    getOscGainNode(){\n    //returns the oscillator object to be used to connected in an audio chain.\n        return this.gainNode;\n    }\n\n    setVolume(val){\n        this.gainNode.gain.value = val;\n    }\n\n    play(value, time){ \n    //value = pitch of note, time = \n        this.init();\n        this.osc.frequency.value = value;\n        this.gainNode.gain.setValueAtTime(1, this.context.currentTime);\n        this.osc.start(time);\n        this.stop(time);\n    }\n\n    stop(time) {\n        this.gainNode.gain.exponentialRampToValueAtTime(0.001, time + 1);\n        this.osc.stop(time + 1);\n    }\n\n    render(){\n        return(\n            <div id = {this.props.id}>\n                <button>Power</button>\n                <div className=\"Wave-form\">\n                    <button onclick={this.setWave.bind(this, 'sine')}>Sine</button>\n                    <button onclick={this.setWave.bind(this, 'square')}>Square</button>\n                    <button onclick={this.setWave.bind(this, 'saw')}>Saw</button>\n                    <button onclick={this.setWave.bind(this, 'triangle')}>Triangle</button>\n                </div>\n                <div className=\"Pitch-control\">\n                    <div className=\"pitchKnob\"></div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass envelope{\n    //Attack: time of gain rise - linear rate?\n    //Sustain: time extension of the play trigger\n    //Decay: time of gain decrease\n    //Release: time of signal length from starting point\n}\n\nclass lfo{\n    //Frequency of low frequency oscillator\n    constructor(context){\n        this.osc = context.createOscillator();\n        this.analyser = this.context.createAnalyser();\n        this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n    }\n    setWave(wave){ \n    //sets the wave type of the oscillator\n        this.osc.type = wave;\n    }\n    getWave(){ \n    //gets the current wave type of the oscillator\n        return this.osc.type;\n    }\n    setFreq(freq){\n        this.osc.frequency.value = freq;\n    }\n    getFreq(){\n        return this.osc.frequnect.value;\n    }\n    render(){\n        return(\n        <div id={this.props.id}>\n            \n        </div>\n        )\n    }\n}\n\nclass filter{\n    \n}\n\n\nexport default oscillator;\n// export default oscillatorGroup;\n// export default synth;\n\n"]},"metadata":{},"sourceType":"module"}