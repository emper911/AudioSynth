{"ast":null,"code":"import _classCallCheck from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/riki/Documents/Git/AudioSynth/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/riki/Documents/Git/AudioSynth/front/src/synth.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar Synthesizer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Synthesizer, _Component);\n\n  function Synthesizer(context, props) {\n    _classCallCheck(this, Synthesizer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Synthesizer).call(this, props));\n  }\n\n  _createClass(Synthesizer, [{\n    key: \"mute\",\n    value: function mute() {\n      //mutes the track\n      console.log('muted in the sound class');\n      this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n    }\n  }, {\n    key: \"unmute\",\n    value: function unmute() {\n      this.gainNode.gain.value = 1;\n    }\n  }, {\n    key: \"volumeAdjust\",\n    value: function volumeAdjust(val) {\n      this.gainNode.gain.value = val;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"polysynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"oscillatorGroup\", {\n        value: this.state.oscillator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"lfoGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"envelopeGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"filterGroup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Synthesizer;\n}(Component);\n\nvar OscillatorModule =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(OscillatorModule, _Component2);\n\n  /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n  */\n  function OscillatorModule(props) {\n    var _this;\n\n    _classCallCheck(this, OscillatorModule);\n\n    //context = audioContext from web audio api\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OscillatorModule).call(this, props));\n    _this.context = _this.props.context;\n\n    _this.init(); //Instantiates \n\n\n    return _this;\n  }\n\n  _createClass(OscillatorModule, [{\n    key: \"init\",\n    value: function init() {\n      //creates gains \n      this.gainNode1 = this.context.createGain();\n      this.gainNode2 = this.context.createGain();\n      this.gainNode3 = this.context.createGain();\n      this.gainNode4 = this.context.createGain();\n      this.finalGainNode = this.context.createGain();\n      this.finalGainNode.channelCount = 1;\n      this.finalGainNode.channelCountMode = \"explicit\";\n      this.finalGainNode.channelInterpretation = \"speakers\";\n      this.merge = this.context.createChannelMerger(2);\n      this.merge2 = this.context.createChannelMerger(2);\n      this.merge3 = this.context.createChannelMerger(2); //this.merge.channelCount = 1;\n      //this.merge.\n\n      this.gainNode1.connect(this.merge, 0, 0);\n      this.gainNode2.connect(this.merge, 0, 1);\n      this.merge.connect(this.merge3, 0, 0);\n      this.gainNode3.connect(this.merge2, 0, 0);\n      this.gainNode4.connect(this.merge2, 0, 1);\n      this.merge2.connect(this.merge3, 0, 1);\n      this.merge3.connect(this.finalGainNode);\n      this.finalGainNode.connect(this.props.outputNode);\n    }\n  }, {\n    key: \"getlastNode\",\n    value: function getlastNode() {\n      return this.merge;\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(osc1, osc2, osc3, osc4) {\n      this.gainNode1.gain.value = osc1;\n      this.gainNode2.gain.value = osc2;\n      this.gainNode3.gain.value = osc3;\n      this.gainNode4.gain.value = osc3;\n    }\n  }, {\n    key: \"changeNote\",\n    value: function changeNote(value) {\n      this.refs.osc1Child.changeNote(value);\n      this.refs.osc2Child.changeNote(value);\n      this.refs.osc3Child.changeNote(value);\n      this.refs.osc4Child.changeNote(value);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {\n      this.refs.osc1Child.stop(time);\n      this.refs.osc2Child.stop(time);\n      this.refs.osc3Child.stop(time);\n      this.refs.osc4Child.stop(time);\n    }\n  }, {\n    key: \"getOsc\",\n    value: function getOsc() {\n      //return oscillator\n      return this.merge;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"oscModule\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Oscillator, {\n        id: \"osc1\",\n        ref: \"osc1Child\",\n        context: this.props.context,\n        outputNode: this.gainNode1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Oscillator, {\n        id: \"osc2\",\n        ref: \"osc2Child\",\n        context: this.props.context,\n        outputNode: this.gainNode2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Oscillator, {\n        id: \"osc3\",\n        ref: \"osc3Child\",\n        context: this.props.context,\n        outputNode: this.gainNode3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Oscillator, {\n        id: \"osc4\",\n        ref: \"osc3Child\",\n        context: this.props.context,\n        outputNode: this.gainNode4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OscillatorModule;\n}(Component);\n\nvar LFOModule =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(LFOModule, _Component3);\n\n  function LFOModule(context) {\n    var _this2;\n\n    _classCallCheck(this, LFOModule);\n\n    return _possibleConstructorReturn(_this2);\n  }\n\n  return LFOModule;\n}(Component);\n\nvar envelopeGroup =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(envelopeGroup, _Component4);\n\n  function envelopeGroup(context) {\n    var _this3;\n\n    _classCallCheck(this, envelopeGroup);\n\n    return _possibleConstructorReturn(_this3);\n  }\n\n  return envelopeGroup;\n}(Component);\n\nvar Oscillator =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(Oscillator, _Component5);\n\n  //oscillator class encapsulates states associated to individual oscillator.\n  //Requires AudioContext() and the outputNode to connect oscillator to be passed through props.\n  function Oscillator(props) {\n    var _this4;\n\n    _classCallCheck(this, Oscillator);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Oscillator).call(this, props));\n    _this4.state = {\n      context: props.context,\n      oscType: 'sine',\n      //sets initial wave form of oscillator.\n      outputNode: props.outputNode,\n      freq: '440'\n    };\n\n    _this4.init();\n\n    return _this4;\n  }\n\n  _createClass(Oscillator, [{\n    key: \"init\",\n    value: function init() {\n      //creates the oscillator\n      this.osc = this.state.context.createOscillator(); //sets wave type to be sine wave\n\n      this.osc.type = this.state.oscType; //set oscillator frequnecy\n\n      this.osc.frequency.value = this.state.freq; //Output node is the node oscillator connects to.\n\n      this.osc.connect(this.state.outputNode); //starts oscillator at time 0.\n\n      this.osc.start(0);\n    }\n  }, {\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.setState({\n        oscType: wave\n      });\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getOscillator\",\n    value: function getOscillator() {\n      //returns the oscillator object to be used to connected in an audio chain.\n      return this.osc;\n    }\n  }, {\n    key: \"changeNote\",\n    value: function changeNote(value) {\n      this.osc.frequency.value = value;\n      this.state.freq = value;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(time) {\n      //stops the oscillator when needed\n      this.osc.stop(time + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"oscillator\",\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Wave-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'sine'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Sine\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'square'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Square\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'sawtooth'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Saw\"), React.createElement(\"button\", {\n        onClick: this.setWave.bind(this, 'triangle'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Triangle\")), this.state.oscType, React.createElement(\"div\", {\n        className: \"Pitch-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pitchKnob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Oscillator;\n}(Component);\n\nvar envelope =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(envelope, _Component6);\n\n  //Attack: time of gain rise - linear rate?\n  //Sustain: time extension of the play trigger\n  //Decay: time of gain decrease\n  //Release: time of signal length from starting point\n  function envelope(props) {\n    var _this5;\n\n    _classCallCheck(this, envelope);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(envelope).call(this, props));\n    _this5.state = {\n      attack: 0,\n      decay: 0,\n      sustain: 1,\n      rlse: 0\n    };\n    return _this5;\n  }\n\n  return envelope;\n}(Component);\n\nvar lfo =\n/*#__PURE__*/\nfunction () {\n  //Frequency of low frequency oscillator\n  function lfo(context) {\n    _classCallCheck(this, lfo);\n\n    this.osc = context.createOscillator();\n  }\n\n  _createClass(lfo, [{\n    key: \"setWave\",\n    value: function setWave(wave) {\n      //sets the wave type of the oscillator\n      this.osc.type = wave;\n    }\n  }, {\n    key: \"getWave\",\n    value: function getWave() {\n      //gets the current wave type of the oscillator\n      return this.osc.type;\n    }\n  }, {\n    key: \"setFreq\",\n    value: function setFreq(freq) {\n      this.osc.frequency.value = freq;\n    }\n  }, {\n    key: \"getFreq\",\n    value: function getFreq() {\n      return this.osc.frequnect.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return lfo;\n}();\n\nvar filter = function filter() {\n  _classCallCheck(this, filter);\n};\n\nexport default OscillatorModule; // export default synth;","map":{"version":3,"sources":["/Users/riki/Documents/Git/AudioSynth/front/src/synth.js"],"names":["React","Component","Synthesizer","context","props","console","log","gainNode","gain","setValueAtTime","currentTime","value","val","state","oscillator","OscillatorModule","init","gainNode1","createGain","gainNode2","gainNode3","gainNode4","finalGainNode","channelCount","channelCountMode","channelInterpretation","merge","createChannelMerger","merge2","merge3","connect","outputNode","osc1","osc2","osc3","osc4","refs","osc1Child","changeNote","osc2Child","osc3Child","osc4Child","time","stop","LFOModule","envelopeGroup","Oscillator","oscType","freq","osc","createOscillator","type","frequency","start","wave","setState","id","setWave","bind","envelope","attack","decay","sustain","rlse","lfo","frequnect","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nclass Synthesizer extends Component{\n    constructor(context, props){\n        super(props);\n\n    }\n\n    mute() {//mutes the track\n        console.log('muted in the sound class');\n        this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n\n    }\n\n\n\n    unmute() {\n        this.gainNode.gain.value = 1;\n    }\n    volumeAdjust(val) {\n        this.gainNode.gain.value = val;\n    }\n    handle\n    render() {\n        return (\n            <div className=\"polysynth\">\n                <oscillatorGroup\n                    value={this.state.oscillator}\n\n                />\n\n                <lfoGroup\n                \n                />\n                <envelopeGroup\n                \n                />\n                <filterGroup\n                \n                />\n            </div>\n\n\n        );\n    }\n}\n\nclass OscillatorModule extends Component{\n    /*Oscillator group is the audio source module web synthesizer. The class contains three oscillators.\n    */\n    constructor(props){\n         //context = audioContext from web audio api\n        super(props);\n        this.context = this.props.context;\n        this.init(); //Instantiates \n    }\n    init(){\n        //creates gains \n        this.gainNode1 = this.context.createGain();\n        this.gainNode2 = this.context.createGain();\n        this.gainNode3 = this.context.createGain();\n        this.gainNode4 = this.context.createGain();\n        this.finalGainNode = this.context.createGain();\n        this.finalGainNode.channelCount = 1;\n        this.finalGainNode.channelCountMode = \"explicit\";\n        this.finalGainNode.channelInterpretation = \"speakers\";\n        this.merge = this.context.createChannelMerger(2);\n        this.merge2 = this.context.createChannelMerger(2);\n        this.merge3 = this.context.createChannelMerger(2);\n        //this.merge.channelCount = 1;\n        //this.merge.\n        this.gainNode1.connect(this.merge, 0, 0);\n        this.gainNode2.connect(this.merge, 0, 1);\n        this.merge.connect(this.merge3,0,0);\n        \n        this.gainNode3.connect(this.merge2, 0, 0);\n        this.gainNode4.connect(this.merge2, 0, 1);\n        this.merge2.connect(this.merge3,0,1);\n\n        this.merge3.connect(this.finalGainNode);\n        this.finalGainNode.connect(this.props.outputNode);\n    }\n    getlastNode(){\n        return this.merge;\n    }\n\n    setVolume(osc1, osc2, osc3, osc4){\n        this.gainNode1.gain.value = osc1;\n        this.gainNode2.gain.value = osc2;\n        this.gainNode3.gain.value = osc3;\n        this.gainNode4.gain.value = osc3;\n    }\n\n    changeNote(value){\n        this.refs.osc1Child.changeNote(value);\n        this.refs.osc2Child.changeNote(value);\n        this.refs.osc3Child.changeNote(value);\n        this.refs.osc4Child.changeNote(value);\n    }\n\n    stop(time){\n        this.refs.osc1Child.stop(time);\n        this.refs.osc2Child.stop(time);\n        this.refs.osc3Child.stop(time);\n        this.refs.osc4Child.stop(time);\n    }\n\n    getOsc(){\n        //return oscillator\n        return this.merge;\n    }\n\n    render(){\n        return(\n            <div className=\"oscModule\">\n                <Oscillator \n                    id={\"osc1\"}\n                    ref=\"osc1Child\"\n                    context={this.props.context}\n                    outputNode={this.gainNode1}\n                />\n\n                <Oscillator \n                    id={\"osc2\"}\n                    ref=\"osc2Child\"\n                    context={this.props.context}\n                    outputNode={this.gainNode2}\n                />\n\n                <Oscillator \n                    id={\"osc3\"}\n                    ref=\"osc3Child\"\n                    context={this.props.context}\n                    outputNode={this.gainNode3}\n                />\n\n                <Oscillator \n                    id={\"osc4\"}\n                    ref=\"osc3Child\"\n                    context={this.props.context}\n                    outputNode={this.gainNode4}\n                />\n            </div>\n        );\n    }\n}\n\nclass LFOModule extends Component{\n    constructor(context){\n\n    }\n\n}\n\nclass envelopeGroup extends Component{\n    constructor(context){\n        \n    }\n}\n\nclass Oscillator extends Component{\n    //oscillator class encapsulates states associated to individual oscillator.\n    //Requires AudioContext() and the outputNode to connect oscillator to be passed through props.\n    constructor(props){\n        super(props)\n        this.state = {\n            context: props.context,\n            oscType : 'sine', //sets initial wave form of oscillator.\n            outputNode: props.outputNode,\n            freq: '440',\n        };\n        this.init();\n    }\n    init(){\n        //creates the oscillator\n        this.osc = this.state.context.createOscillator();\n        //sets wave type to be sine wave\n        this.osc.type = this.state.oscType;\n        //set oscillator frequnecy\n        this.osc.frequency.value = this.state.freq;\n        //Output node is the node oscillator connects to.\n        this.osc.connect(this.state.outputNode);\n        //starts oscillator at time 0.\n        this.osc.start(0);\n    }\n\n    setWave(wave){ \n        //sets the wave type of the oscillator\n        this.setState({oscType: wave});\n        this.osc.type = wave;\n    }\n    \n    getOscillator(){\n    //returns the oscillator object to be used to connected in an audio chain.\n        return this.osc;\n    }\n\n    changeNote(value){ \n        this.osc.frequency.value = value;\n        this.state.freq = value;\n    }\n\n    stop(time) {\n        //stops the oscillator when needed\n        this.osc.stop(time + 1);\n    }\n\n    render(){\n        return(\n            <div className=\"oscillator\" id = {this.props.id}>\n                <div className=\"Wave-form\">\n                    <button onClick={this.setWave.bind(this, 'sine')}>Sine</button>\n                    <button onClick={this.setWave.bind(this, 'square')}>Square</button>\n                    <button onClick={this.setWave.bind(this, 'sawtooth')}>Saw</button>\n                    <button onClick={this.setWave.bind(this, 'triangle')}>Triangle</button>\n                </div>\n                {this.state.oscType}\n                <div className=\"Pitch-control\">\n                    <div className=\"pitchKnob\"></div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass envelope extends Component{\n    //Attack: time of gain rise - linear rate?\n    //Sustain: time extension of the play trigger\n    //Decay: time of gain decrease\n    //Release: time of signal length from starting point\n    constructor(props){\n        super(props);\n        this.state = {\n            attack: 0,\n            decay: 0,\n            sustain: 1,\n            rlse: 0,\n        };\n    }\n}\n\nclass lfo{\n    //Frequency of low frequency oscillator\n    constructor(context){\n        this.osc = context.createOscillator();\n    }\n    setWave(wave){ \n    //sets the wave type of the oscillator\n        this.osc.type = wave;\n    }\n    getWave(){ \n    //gets the current wave type of the oscillator\n        return this.osc.type;\n    }\n    setFreq(freq){\n        this.osc.frequency.value = freq;\n    }\n    getFreq(){\n        return this.osc.frequnect.value;\n    }\n    render(){\n        return(\n        <div id={this.props.id}>\n            \n        </div>\n        )\n    }\n}\n\nclass filter{\n    \n}\n\n\nexport default OscillatorModule;\n// export default synth;\n\n"]},"metadata":{},"sourceType":"module"}